https://github.com/okovtun/BD_321.git
https://www.youtube.com/watch?v=1OC_9iEGJ24&list=PLeqyOOqxeiIMr5G8nf1P8iQwzzwZIv1vW

https://t.me/+ovxoPDMg4ZA0Yzk6

TOREAD:
https://legacy.cplusplus.com/
https://en.cppreference.com/w/
https://stackoverflow.com/

devenv:
https://www.youtube.com/watch?v=cLBwgKNIlNw

TODO:
В проекте 'NULLTerminatedLines' дописать следующие функции:
	char* to_lower(char str[]);
	char* shrink(char str[]);	//удаляет лишние пробелы из строки, например:
								//Хорошо       живет      на   свете     Винни      Пух
								//Хорошо живет на свете Винни Пух
	bool is_palindrome(char str[]);	//проверяет, является ли строка палиндромом

TODO:
1. В проекте 'DynamicMemory' написать следующие функции:
	??? Allocate(???);			//выделяет память под двумерный динамиеский массив
	??? Clear(???);				//удаляет двумерный динамиеский массив из памяти

	??? push_row_front(???);	//добавляет строку в начало массива
	??? insert_row(???);		//вставляет строку в массив по указанному индексу

	??? pop_row_back(???);		//удаляет последнюю строку из массива
	??? pop_row_front(???);		//удаляет нулевую строку из массива
	??? erase_row(???);			//удаляет строку из массива по заданному индексу

	??? push_col_back(???);		//добавляет столбец в конец массива
	??? push_col_front(???);	//добавляет столбец в начало массива
	??? insert_col(???);		//вставляет столбец в массив по указанному индексу

	??? pop_col_back(???);		//удаляет последний столбец из массива
	??? pop_col_front(???);		//удаляет нулевой столбец из массива
	??? erase_col(???);			//удаляет столбец из массива по указанному индексу

2. Сделать commit, создать ветку 'DynamicTemplated', и в этой ветке, 
   шаблонизировать все функции для работы с динамическими массивами;

3. ***От ветки 'DynamicTemplated' создать ветку 'DynamicOptimisation', 
   и в ней оптимизировать функции для работы с двумерными динамическими массивами;

DONE:
1. Вынести код, добавляющий значение в конец массива в функцию ??? push_back(???);
2. В проект 'DynamicMemory' добавить и проветрить следующие функции:
	??? push_front(???);	//добавляет значение в начало массива
	??? insert(???);		//вставляет значение в массив по заданному индексу

	??? pop_back(???);		//удаляет последний элемент массива
	??? pop_front(???);		//удаляет нулевой элемент массива
	??? erase(???);			//удаляет элемент из массива по заданному индексу

DONE:
1. Выучить теорию по Указателям;
2. В Solution 'Pointers' добавить проект 'Split', и в этом проекте:
   Есть массив из 10 элементов, заполненный случайными числами.
   Необходимо создать еще два массива, минимально возможного размера,
   even[] и odd[], в массив even[] скопировать все четные значения из исходного массива,
   а в массив odd[] все нечетные значения из исходного массива.
3. В проекте 'DynamicMemory' в конец динамического массива 'arr' нажно добавить значение, введенное с клавиатуры;

DONE:
1. Выучить теорию по Указателям;
2. Нарисовать передачу параметров в функцию по указателю;

TODO:
https://legacy.cplusplus.com/doc/tutorial/functions2/
0. Выучить разделы диска!!!!!!!!!!!!!!!!!! http://citforum.ru/operating_systems/linux/user/gl-02/gl_02_03.shtml
1. В ветке 'Templates' шаблонизировать все функции для работы с массивами и проветрить их;
2. От ветки 'Templates' создать ветку 'separated_templates' и в ней вынести шаблонные функции в отдельные файлы;
3. От ветки 'separated_templates' создать ветку 'templated_lib_check', в ней собрать библиотеку шаблонных функций,
   и проветрить эту библиотеку на отдельном проекте.
   https://docwiki.embarcadero.com/RADStudio/Alexandria/en/Exporting_And_Importing_Templates

DONE:
Реализовать функцию void Move(???), которая будет устанавливать в соответствующую позицию на поле X или 0;

DONE:
1. Реализовать рекурсивную функцию ??? factorial(???), которая принимает число, и возвращает факториал этого числа;		DONE
2. Реализовать рекурсивную функцию ??? power(???), которая возводит указанное число в указанную степень;				DONE
3. Реализовать функцию void Fibonacci(???), которая выводит на экран ряд Фибоначчи до указанного предела;
4. Реализовать функцию void Fibonacci(???), которая выводит на экран заданное количество членов из ряда Фибоначчи;

TODO:
0. Выучить теорию по функциям!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
1. Все функции из проекта 'Functions\Arrays' перегрузить для типов данных 'double' и 'char';
2. Перегрузить все функции в проекте 'Functions\Arrays' для двумерных массивов тех же типов;

DONE:
0. Выучить теорию по функциям!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
1. В проект 'Functions' добавить функции:
	??? Factorial(???);		//принимает число, и возвращает факториал этого числа
	??? Power(???);			//возводит указанное число в указанную степень
2. В проекте 'Functions\Arrays' написать следующие функции:
	??? FillRand(???);		//заполняет массив случайными числами					DONE
	??? Print(???);			//выводит массив на экран								DONE
	??? Sort(???);			//сортирует массив										DONE
	??? Sum(???);			//возвращает сумму элементов массива					DONE
	??? Avg(???);			//возвращает среднее-арифметическое элементов массива	DONE
	??? minValueIn(???);	//возвращает минимальное значение из массива			DONE
	??? maxValueIn(???);	//возвращает максимальное значение из массива			DONE
	??? shiftLeft(???);		//сдвигает массив на заданное число элементов влево
	??? shiftRight(???);	//сдвигает массив на заданное число элементов вправо

DONE:
1. Выучить теорию по функциям;
2. В Solution 'Arrays' добавить проект 'Matrix', и в этом проекте:
	-выполнить сложение матриц;
	-выполнить вычитание матриц;
	-выполнить умножение матриц;
	-вычислить определитель матрицы третьего порядка методом Саррюса;

DONE:
1. Отсортировать массив заполненный случайными числами в порядке возрастания;
2. Заполнить массив уникальными случайными числами в диапазоне от 70 до 80;
3. Есть массив из 10 элементов, заполненный случайными числами в диапазоне от 0 до 5. 
   Необходимо найти в этом массиве значения, которые встречаются больше одного раза, вывести их на экран,
   и вывести на экран количество повторению этих значений.
4. Десятичное число, введенной с клавиатуры перевести в двоичную системы считсления;
5. Десятичное число, введенной с клавиатуры перевести в шестнадцатеричную системы считсления;

DONE:
В проекте Shift выполнить циклический сдвиг массива на заданное число элементов вправо.

DONE:
1. Выбрать пять проектов, и залить из на GitHub;
2. В проекте 'Arrays' написать код, который:
	-позволяет ввести элементы массива с клавиатуры;
	-выводит массив на экран в прямом порядке (от 0-го элемента до последнего);
	-выводит массив на экран в обратном порядке (от последнего элемента до 0-го);
	-вычисляет сумму элементов массива;
	-вычисляет среднее-арифметическое элементов массива;
	-находит минимальное и максимальное значение в массиве;

DONE:
1. Добить фигуры из прошлой домашки;
2. https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/ChessBoard.jpg;
3. https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/HardChess.jpg;
4.*** Вывести на экран треугольник Паскаля;

DONE:
Вывести в консоль все фигуры из файла:
	https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/Geometria1.txt
Размер фигуры пользоватль вводит с клавиатуры.

DONE:
1. Выровнять таблицу умножения таким образом, чтобы младший разряд всегда	DONE
   находился под младшим разрядом - единицы над единицами, десятки над десятками, и т.д.
2. Вывести на экран таблицу Пифагора;					DONE
3. Вывести на экран ряд Фибоначчи до заданного предела;
4. Вывести на экран заданное количество чисел из ряда Фибоначчи;
	Ряд Фибоначчи - это ряд чисел, каждый следующий член которого == сумме двух предыдущих членов ряда.
		0	1	1	2	3	5	8	.......
5. Вывести на экран ряд простых чисел до указанного предела.
	Простым называется число, которое делится без остатка только на себя и на единицу,
	этому требованию удовлетворяют и ссотавные числа, но они делятся без остатка и на другие чила.


DONE:
1. Написать программу, которая вычисляет факториал числа, введенного с клавиатуры.
   Факториал - это произведение ряда чисел от 1 до указанного, например:
	5! = 1*2*3*4*5 = 120;
2. Написать программу, которая возводит указанное число в указанную степень,
   основание и показатель стпени вводятся с клавиатуры;
3. Вывести на экран ASCII-таблицу по 16 символов в строке;

DONE:
1. Пользователь вводит номер автобусного билета, а программа говорит, является ли этот билет счастливым, или нет.
   Счастливым называется билет, у которого сумма трех старших разрядов равна сумме трех младших разрядов, например
	123123 - Счастливый билет
	434731 - Счастливый билет
	123777 - Обычный билет
2. В Solution 'Control structures' добавить проект 'Shooter' и в нем реализовать следующую игру:
	Пользоавтель нажимает на определенные клавиши, а программа выводит на экран определенные действия:
		w - вперед
		s - назад
		a - влево
		d - вправо
		space - прыжок
		enter - огонь
	Если пользователь нажал на какую-то другую клавишу, программа выводит 'Error'
	Выход из программы осуществляется клавишей Escape.

DONE:
1. Выучить теорию!!!
2. В проекте Calc написать такой же калькулятор, только с использованием конструкции switch;					DONE
3. Пользователь вводит число с клавиатуры, а программа должна сказать, является ли данное число палиндромом.	DONE
   Палиндром - это число, которое читается одинаково в обоих направлениях, например
   121
   1221
   12321

DONE:
1. Выучить теорию!!!
2. Поменять местами две переменные:
	int a = 2, b = 3;
	cout << a << "\t" << b << endl;
	.....
	.....
	.....
	cout << a << "\t" << b << endl;

DONE:
1. Выучить теорию!!!
2. Решить все задачи из файла:
	https://github.com/okovtun/BD_321/blob/master/DataTypes/VariablesTask.pdf
3. Почитать: https://legacy.cplusplus.com/doc/tutorial/constants/
DONE:
1. Выучить теорию!!!
2. Используя оператор sizeof() и макросы Visual Studio вывести в консоль информацию 
   о всех изученных числовых типах.

DONE:
1. Выучить теорию!!!
2. Вывести в консоль стишок "В лесу родилась Ёлочка". Стишок должен быть выровнен по середине окна консоли,
   и его куплеты должны быть разделены пустой строкой.